#function Clean-MicrosoftStreamVttFile {

<#

.Synopsis

  Cleans a Microsoft Stream VTT file, so that you get only the spoken text.

.Description

	A VTT file from Microsoft Stream contains more informations than only the transcripted text. This code removes the extra informations and saves the text in a file.
    This is inspired by the VTTCleaner web site from Marc Mroz.

.Example

	C:\PS>.\Clean-MicrosoftStreamVttFile.ps1 -File ".\MyStreamVttFile.vtt"

	

	This example extracts the contained text and saves it to MyStreamVttFile.vttcleaned


.Notes

	Name: Clean-MicrosoftStreamVttFile

	Author: Tomislav Karafilov

	Last Edit: 11.06.2020

	Keywords: MicrosoftStream VTT

.Link



http://foo.com



.Inputs

	None

.Outputs

	None

#Requires -Version 2.0

#>

[CmdletBinding(SupportsShouldProcess=$True)]

	Param

    (

        [Parameter(Mandatory=$true,HelpMessage="Filename of VTT file")]

    	[string]$File
    )

    PROCESS {

        if ($pscmdlet.ShouldProcess("Continue?")) {

            #$File = ".\Test 1 nur Benutzer kein Kanal_AutoGeneratedCaption.vtt"
            #$File = ".\Discussion PowerApps, development, pattern_AutoGeneratedCaption.vtt"
            $contentFilename = $File

            $content = [IO.File]::ReadAllText($File)

            $content = $content -replace("WEBVTT[\r\n]", "")
            $content = $content -replace("NOTE duration:.*[\r\n]", "")
            $content = $content -replace("NOTE language:.*[\r\n]", "")
            $content = $content -replace("NOTE Confidence:.+\d", "")
            $content = $content -replace("NOTE recognizability.+\d", "")

            $content = $content -replace("[\r\n].+-.+-.+-.+-.+","")
            $content = $content -replace("[\r\n].+ --> .+[\r\n]","")
            $content = $content -replace(".[\r\n]. --> .+[\r\n]","")
            #$content = $content -replace("[\n](.)"," ");
            $content = $content -replace("[\r\n]+"," ");
            $content = $content -replace("^ ","");

            #$content

            [IO.File]::WriteAllText($File+"cleaned", $content)

        }

        else {

            Write "Not doing it..."

        }

    }

#} #End function